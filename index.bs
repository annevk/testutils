<pre class='metadata'>
Group: WHATWG
Title: Browser Testing API
Shortname: browser-test
Editor: James Graham, Mozilla https://mozilla.org, james@hoppipolla.co.uk, https://hoppipolla.co.uk
Boilerplate: conformance no
Complain About: accidental-2119 yes, missing-example-ids yes
Abstract: This document defines APIs that provide additional testing functionality in browsers
Text Macro: COMMIT-SHA LOCAL COPY
Text Macro: TWITTER _
</pre>

Introduction {#intro}
=====================

Testing browsers often requires use of specialised API surface that is
not suitable for exposing to web authors, for example because it could
undermine platform invariants, or allow behaviour that could put users
at risk. This can make writing cross-browser tests difficult because
each implementation of the web platform will have its own approach to
defining such test APIs. The [[!WEBDRIVER|WebDriver]] standard
provides some of these APIs, with a focus on automated testing of web
applications. However for testing of browser implementations
themselves, there are some additional APIs that don't fit into the
WebDriver framework, but are nevertheless important to testing.

This specification defines additional in-browser APIs for use in
tests, but which are not suitable to enable for end users. The primary
client of these APIs is the web-platform-tests
testsuite.

Infrastructure {#infrastructure}
================================

<p>This specification depends on the Infra Standard. [[!INFRA]]

<p>This specification uses terminology from the IDL standard
[[!WEBIDL]]

Availability {#availability}
============================

The interfaces defined in this specification must not be enabled in
the default shipping configuration of user agents. They must only be
enabled in testing configurations for example with special build
flags, or when a specific non-default preference is set.

The TestUtils Object {#the-testutils-object}
============================================

<xmp class=idl>
[Exposed=Window,Worker]
interface TestUtils {
  Promise<void> gc();
};

partial interface mixin WindowOrWorkerGlobalScope {
  readonly attribute TestUtils testUtils;
};
</xmp>

The `gc()` method must run these steps:

 1. Let |p| be a new promise.

 2. Run the following [=in parallel=]:

    2.1 Run implemenation defined steps to perform a garbage collection
        covering at least the [=entry Realm=].

    2.2 Resolve |p|